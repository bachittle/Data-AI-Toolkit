# takes in a directory structure generated by dir_scanner.py
# and concatenates all the files in the directory into one file

FILE_HEADER = """
--- {} START ---
"""

FILE_FOOTER = """
--- {} END ---
"""

import sys
import json
import os

def validate_json(dir_data):
    # check if json file was made using format that dir_scanner.py uses
    # format:
    # is a dictionary with each key being the directory path (ex: C:\Users\... on windows, /Users/... on linux, etc.)
    # value of each key contains two keys: "dirs" and "files". "dirs" is a list of directories inside the base directory, 
    # and "files" is a list of files inside the base directory. 

    if not isinstance(dir_data, dict):
        print("Error: Invalid JSON format. Expected a dictionary.")
        return False
    
    for k, v in dir_data.items():
        if not os.path.isdir(k):
            print(f"Error: Invalid directory path: {k}")
            return False

        if not isinstance(v, dict):
            print(f"Error: Invalid JSON format for directory: {k}")
            return False
        
        if not isinstance(v["dirs"], list):
            print(f"Error: Invalid JSON format for directory: {k}")
            return False
        
        if not isinstance(v["files"], list):
            print(f"Error: Invalid JSON format for directory: {k}")
            return False
    
    return True

def concat_dir_data(dir_data):
    concat_data = ""
    for k, v in dir_data.items():
        for f in v["files"]:
            filepath = os.path.join(k, f)
            print(f"adding file {filepath}")

            # check if file is a valid text file

            try:
                with open(filepath, "r") as f:
                    concat_data += f"{FILE_HEADER.format(filepath)}\n"
                    concat_data += f"{f.read()}\n"
            except Exception as e:
                print(f"Error: {e}")
                print(f"skipping file {filepath}")
                pass
            concat_data += f"{FILE_FOOTER.format(filepath)}\n"
    
    return concat_data

def main():
    if len(sys.argv) < 2 or len(sys.argv) > 3:
        print(f"Usage: python {sys.argv[0]} <json_file> [<output_file>]")
        sys.exit(1)

    json_file_path = sys.argv[1]
    with open(json_file_path, 'r') as json_file:
        dir_data = json.load(json_file)
        is_valid_json = validate_json(dir_data)
        if not is_valid_json:
            sys.exit(1)
        
        print("JSON is valid. Concatenating...")
        concat_data = concat_dir_data(dir_data)

    if len(sys.argv) == 3:
        output_file = sys.argv[2]
        with open(output_file, 'w') as output_file:
            output_file.write(concat_data)
            print("Successfully wrote to file.")
            sys.exit(0)

    else:
        print(f"{FILE_HEADER}\n{concat_data}{FILE_FOOTER}")



if __name__ == "__main__":
    main()